name: Make Bets (auto greyhound key)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"   # daily 02:00 UTC

permissions:
  contents: write
  actions: read

jobs:
  make-bets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run daily model (build probabilities.csv)
        run: python -m src.run_daily

      - name: Ensure sports list exists (download if missing)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        shell: bash
        run: |
          set -e
          mkdir -p data
          if [ ! -f data/sports.json ]; then
            echo "[info] downloading data/sports.json"
            curl -fsSL "https://api.the-odds-api.com/v4/sports/?apiKey=${ODDS_API_KEY}" -o data/sports.json
          else
            echo "[info] sports.json already present"
          fi

      - name: Resolve greyhound SPORT_KEY from sports.json
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          import json, os, sys
          p="data/sports.json"
          try:
            data=json.load(open(p,"r",encoding="utf-8"))
          except Exception as e:
            print(f"[error] cannot read {p}: {e}"); sys.exit(2)

          cands=[]
          for s in data:
            key=(s.get("key") or "").lower()
            title=(s.get("title") or "").lower()
            group=(s.get("group") or "").lower()
            if "greyhound" in key or "greyhound" in title or "greyhound" in group:
              cands.append(s)

          if not cands:
            print("No greyhound sport found in sports.json")
            print("First 40 keys:")
            for s in data[:40]:
              print(" -", s.get("key"))
            sys.exit(2)

          # prefer AU if visible, else first candidate
          pick = None
          for s in cands:
            k=(s.get("key") or "").lower()
            if "aus" in k or k.endswith("_au") or "australia" in k:
              pick=s; break
          pick = pick or cands[0]
          sport = pick.get("key")
          print("[info] greyhound candidates:")
          for s in cands:
            print(f" - key={s.get('key')} | title={s.get('title')} | group={s.get('group')}")
          print(f"[info] Using SPORT_KEY={sport}")
          with open(os.environ["GITHUB_ENV"],"a",encoding="utf-8") as f:
            f.write(f"SPORT_KEY={sport}\n")
          PY

      - name: Fetch odds (Odds API)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        shell: bash
        run: |
          set -e
          mkdir -p data/odds
          echo "[info] Requesting odds for ${SPORT_KEY}"
          python -m src.odds_client \
            --sport "${SPORT_KEY}" \
            --regions au \
            --markets h2h \
            --date today \
            --out-dir data/odds \
            --api-key "${ODDS_API_KEY}"

      - name: Make bets (produce bets.csv)
        shell: bash
        run: |
          set -e
          python -m src.make_bets \
            --probs reports/latest/probabilities.csv \
            --odds data/odds \
            --out reports/latest/bets.csv
          ls -l reports/latest/

      - name: Upload bets artifact
        uses: actions/upload-artifact@v4
        with:
          name: bets-report
          path: reports/latest/bets.csv

      - name: Commit bets.csv back to repo
        shell: bash
        run: |
          set -e
          git config --local user.name "actions-user"
          git config --local user.email "actions@github.com"
          git add reports/latest/bets.csv
          git commit -m "Add latest bets report" || echo "No changes to commit"
          git push || echo "Nothing to push (likely no changes)"
